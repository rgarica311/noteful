{"version":3,"sources":["CircleButton/CircleButton.js","notes-helpers.js","NotefulContext.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","AddFolder/ValidateFolder.js","AddFolder/AddFolder.js","AddNote/ValidateNote.js","AddNote/AddNote.js","AddNote/findFolderId.js","ErrorBoundaries/AddFolderError.js","ErrorBoundaries/AddNoteError.js","ErrorBoundaries/NotePageError.js","App/App.js","index.js"],"names":["CircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","findNote","notes","arguments","length","undefined","noteId","find","note","id","countNotesForFolder","folderId","filter","NotefulContext","createContext","folders","deleteNote","NoteListNav","react_default","a","src_NotefulContext","Consumer","context","map","folder","key","NavLink","to","concat","name","CircleButton_CircleButton","Link","type","react_fontawesome_index_es","icon","NotePageNav","role","onClick","history","goBack","Note","callback","_this","this","fetch","method","headers","content-type","then","res","ok","json","error","data","catch","console","_this2","deleteNoteRequest","format","modified","Component","NoteListMain","Note_Note_Note","NotePageMain","content","split","para","i","ValidateFolder","message","Fragment","AddFolder","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","value","touched","setState","trim","e","preventDefault","body","JSON","stringify","getFolders","push","onSubmit","handleSubmit","setFolders","htmlFor","onChange","updateFolderName","target","validateFolderName","disabled","ValidateNoteName","AddNote","folderName","includes","folderIndex","arr","attr","j","findFolderId","Date","getNotes","updateNoteName","validateNote","updateNoteContent","validateNoteContent","updateNoteFolder","renderOptions","AddFolderError","hasError","AddNoteError","NotePageError","App","setNotes","newNotes","Error","status","stats","_this3","_this$state","path","Route","exact","component","render","routeProps","match","params","findFolder","NotePageNav_NotePageNav","assign","AddFolderError_AddFolderError","AddFolder_AddFolder_AddFolder","AddNoteError_AddNoteError","AddNote_AddNote_AddNote","notesForFolder","getNotesForFolder","NoteListMain_NoteListMain","log","NotePageError_NotePageError","NotePageMain_NotePageMain","contextValue","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","HashRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1428ecac.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\nimport PropTypes from 'prop-types'\n\nexport default function CircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nCircleButton.defaultProps ={\n  tag: 'a',\n}\n\nCircleButton.propTypes = {\n  children: PropTypes.array,\n  className: PropTypes.string,\n  tag: (props, propName) => {\n    const prop = props[propName]\n\n    if(typeof prop != 'function') {\n      if(typeof prop != 'string') {\n        return new Error(`Invalid prop, ${propName} is expected to be a string or function ${propName} is of type ${typeof prop}`)\n      }\n    }\n  },\n  to: PropTypes.string,\n  type: PropTypes.string\n}\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from 'react'\n\nconst NotefulContext = React.createContext({\n  notes: [],\n  folders: [],\n  deleteNote: () => {},\n})\n\nexport default NotefulContext\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\nimport NotefulContext from '../NotefulContext'\n\nexport default function NoteListNav(props) {\n  return (\n    <NotefulContext.Consumer>\n      {(context) => (\n        <div className='NoteListNav'>\n          <ul className='NoteListNav__list'>\n            {context.folders.map(folder =>\n              <li key={folder.id}>\n                <NavLink\n                  className='NoteListNav__folder-link'\n                  to={`/folder/${folder.id}`}\n                >\n                  <span className='NoteListNav__num-notes'>\n                    {countNotesForFolder(context.notes, folder.id)}\n                  </span>\n                  {folder.name}\n                </NavLink>\n              </li>\n            )}\n          </ul>\n          <div className='NoteListNav__button-wrapper'>\n            <CircleButton\n              tag={Link}\n              to='/add-folder'\n              type='button'\n              className='NoteListNav__add-folder-button'\n            >\n              <FontAwesomeIcon icon='plus' />\n              <br />\n              Folder\n            </CircleButton>\n          </div>\n        </div>\n      )}\n      </NotefulContext.Consumer>\n  )\n}\n\nNoteListNav.defaultProps = {\n  folders: []\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport './NotePageNav.css'\nimport NotefulContext from '../NotefulContext'\n\n\nexport default function NotePageNav(props){\n\n\n    return (\n      <NotefulContext.Consumer>\n      {(context) => (\n        <div className='NotePageNav'>\n          <CircleButton\n            tag='button'\n            role='link'\n            onClick={() => props.history.goBack()}\n            className='NotePageNav__back-button'\n          >\n            <FontAwesomeIcon icon='chevron-left' />\n            <br />\n            Back\n          </CircleButton>\n          {context.folder && (\n            <h3 className='NotePageNav__folder-name'>\n              {context.folder.name}\n            </h3>\n          )}\n        </div>\n      )}\n      </NotefulContext.Consumer>\n    )\n\n\n\n}\n\nNotePageNav.defaultProps = {\n  history: {\n    goBack: () => {}\n  }\n}\n","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './Note.css'\nimport NotefulContext from '../NotefulContext'\nimport PropTypes from 'prop-types'\nimport { format } from 'date-fns'\n\n\n\nexport default class Note extends Component {\n\n\n  deleteNoteRequest(noteId, callback){\n\n    fetch(`http://localhost:9090/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then(res => {\n      if(!res.ok) {\n        return res.json().then(error => {\n          throw error\n        })\n      }\n      return res.json()\n    })\n    .then(data => {\n      callback(noteId)\n      if(this.props.history !== undefined){\n        this.props.history.goBack()\n      }\n\n    })\n    .catch(error => {\n      console.error(error)\n    })\n  }\n\n  render(){\n    return (\n      <NotefulContext.Consumer>\n      {(context) => (\n        <div className='Note'>\n          <h2 className='Note__title'>\n            <Link to={`/note/${this.props.id}`}>\n              {this.props.name}\n            </Link>\n          </h2>\n          <button className='Note__delete' type='button'\n            onClick={() => {\n              this.deleteNoteRequest(\n                this.props.id,\n                context.deleteNote\n              )\n            }}\n          >\n            <FontAwesomeIcon icon='trash-alt' />\n            {' '}\n            remove\n          </button>\n          <div className='Note__dates'>\n            <div className='Note__dates-modified'>\n              Modified\n              {' '}\n              <span className='Date'>\n                {format(this.props.modified)}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n      </NotefulContext.Consumer>\n\n    )\n\n  }\n\n}\n\nNote.propTypes = {\n  id: PropTypes.string,\n  modified: PropTypes.string,\n  name: PropTypes.string,\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport './NoteListMain.css'\n\n\nexport default function NoteListMain(props) {\n  return (\n\n      <section className='NoteListMain'>\n        <ul>\n          {props.notes.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n\n  )\n}\n\nNoteListMain.defaultProps = {\n  notes: [],\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport './NotePageMain.css'\n\n\nexport default function NotePageMain(props) {\n  return (\n        <section className='NotePageMain'>\n          <Note history={props.history} id={props.note.id} name={props.note.name} modified={props.note.modified}/>\n          <div className='NotePageMain__content'>\n            {props.note.content.split(/\\n \\r|\\n/).map((para, i) =>\n              <p key={i}>{para}</p>\n            )}\n          </div>\n        </section>\n  )\n}\n\nNotePageMain.defaultProps = {\n  note: {\n    content: '',\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function ValidateFolder(props){\n  if(props.message) {\n    return (\n      <div className=\"error\">{props.message}</div>\n    )\n  }\n  return <></>\n}\n\nValidateFolder.propTypes = {\n  message: PropTypes.string\n}\n","import React, { Component } from 'react'\nimport ValidateFolder from './ValidateFolder'\nimport './AddFolder.css'\nimport NotefulContext from '../NotefulContext'\n\n\nexport default class AddFolder extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      name: {\n        value: '',\n        touched: false\n      },\n\n    }\n\n  }\n\n  updateFolderName(name){\n    this.setState({name: {value: name, touched: true}})\n  }\n\n  validateFolderName(value) {\n    const name = this.state.name.value.trim()\n    if(name.length === 0) {\n      return 'Name is required'\n    } else if (name.length < 3) {\n      return 'Folder name must be at lest 3 character long'\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n    const name = this.state.name\n    const data = {name: name.value}\n    fetch('http://localhost:9090/folders', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(\n      this.props.getFolders,\n      this.props.history.push('/')\n    )\n    .catch(error => console.error('Error:', error))\n  }\n\n  render(){\n\n    return(\n      <NotefulContext.Consumer>\n      {(context) => (\n        <form className=\"addFolder\" onSubmit={e => this.handleSubmit(e, context.setFolders)}>\n          <h2>Add Folder</h2>\n          <div className=\"formGroup\">\n            <label htmlFor=\"name\">Folder Name</label>\n            <input type=\"text\" className=\"folder-input\" name=\"name\" onChange={e => this.updateFolderName(e.target.value)}/>\n            {this.state.name.touched && (\n              <ValidateFolder message={this.validateFolderName()}/>\n            )}\n          </div>\n          <button type=\"submit\" className=\"add-folder-button\" disabled={\n            this.validateFolderName()\n          }>Save\n          </button>\n        </form>\n      )}\n      </NotefulContext.Consumer>\n\n    )\n  }\n\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function ValidateNoteName(props){\n  if(props.message) {\n    return (\n      <div className=\"error\">{props.message}</div>\n    )\n  }\n  return <></>\n}\n\nValidateNoteName.propTypes = {\n  message: PropTypes.string\n}\n","import React, { Component } from 'react'\nimport ValidateNote from './ValidateNote'\nimport findFolderId from './findFolderId'\nimport './AddNote.css'\n\n\nexport default class AddNote extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      name: {\n        value: '',\n        touched: false\n      },\n      content: {\n        value: '',\n        touched: false\n      },\n      folder: {\n        value: 'Important',\n        touched: false\n      },\n\n    }\n\n  }\n\n\n\n  updateNoteName(name){\n    this.setState({name: {value: name, touched: true}})\n  }\n\n  updateNoteFolder(folder){\n    this.setState({folder: {value: folder, touched: true}})\n  }\n\n  updateNoteContent(content){\n    this.setState({content: {value: content, touched: true}})\n  }\n\n  validateNote(value) {\n    const name = this.state.name.value.trim()\n    if(name.length === 0) {\n      return 'Name is required'\n    } else if (name.length < 3) {\n      return 'Note name must be at least 3 characters long'\n    }\n  }\n\n  validateNoteFolder(value) {\n    const folderName = this.state.folder.value.trim()\n    const folders = []\n\n\n    for(let i=0; i<this.props.folders.length; i++) {\n      folders.push(this.props.folders[i].name)\n    }\n    if(folders.includes(folderName)){\n      return `Folder ${folderName} is available`\n    } else {\n      return `Folder ${folderName} does not exist`\n    }\n  }\n\n  validateNoteContent(value) {\n    const content = this.state.content.value.trim()\n    if(content.length === 0) {\n      return 'Note cannot be empty'\n    } else if (content.length < 3) {\n      return 'Note content must be at least 3 characters long'\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n    const name = this.state.name\n    const folderName = this.state.folder.value.trim()\n    const folderIndex = findFolderId(this.props.folders, 'name', folderName )\n    const folderId = this.props.folders[folderIndex].id\n    const content = this.state.content\n    const data = {name: name.value, folderId: folderId, content: content.value, modified: new Date()}\n    fetch('http://localhost:9090/Notes', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(\n      this.props.getNotes,\n      this.props.history.push('/')\n    ).catch(error => console.error('Error:', error))\n  }\n\n  renderOptions() {\n    return (\n      <>\n        {this.props.folders.map(folder => (\n          <option key={folder.name} value={folder.name}>{folder.name}</option>\n        ))\n        }\n      </>\n    )\n\n  }\n\n  render(){\n    return(\n      <form className=\"addNote\" onSubmit={e => this.handleSubmit(e)}>\n        <h2>Add Note</h2>\n        <div className=\"formGroup\">\n          <label htmlFor=\"name\">Note Name:</label>\n          <input type=\"text\" className=\"add-note-control\" name=\"name\" onChange={e => this.updateNoteName(e.target.value)}/>\n          {this.state.name.touched && (\n            <ValidateNote message={this.validateNote()}/>\n          )}\n          <label htmlFor=\"Content\">Note:</label>\n          <input type=\"text\" className=\"add-note-content-control\" name=\"Content\" onChange={e => this.updateNoteContent(e.target.value)}/>\n          {this.state.content.touched && (\n            <ValidateNote message={this.validateNoteContent()}/>\n          )}\n          <label htmlFor=\"Folder\">Pick Folder:</label>\n          <select name=\"Folder\" onChange={e => this.updateNoteFolder(e.target.value)}>\n            {this.renderOptions()}\n          </select>\n        </div>\n        <button type=\"submit\" className=\"add-note-button\" disabled={\n          this.validateNote()\n        }>Save\n        </button>\n      </form>\n    )\n  }\n\n}\n\nAddNote.defaultProps = {\n  folders: 'Important'\n}\n","export default function findFolderId(arr, attr, value) {\n  for(let j=0; j<arr.length; j++) {\n    if(arr[j][attr] === value){\n      return j\n    }\n  }\n  return -1\n}\n","import React, { Component } from 'react'\n\nexport  default class AddFolderError extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      hasError: false\n    }\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true}\n  }\n\n  render(){\n    if (this.state.hasError) {\n      return (\n        <h2>Could not render Add Folder Form</h2>\n      )\n    }\n    return this.props.children\n  }\n}\n","import React, { Component } from 'react'\n\nexport  default class AddNoteError extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      hasError: false\n    }\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true}\n  }\n\n  render(){\n    if (this.state.hasError) {\n      return (\n        <h2>Could not render Add Note Form</h2>\n      )\n    }\n    return this.props.children\n  }\n}\n","import React, { Component } from 'react'\n\nexport  default class NotePageError extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      hasError: false\n    }\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true}\n  }\n\n  render(){\n    if (this.state.hasError) {\n      return (\n        <h2>Could not render Note Page</h2>\n      )\n    }\n    return this.props.children\n  }\n}\n","import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport {getNotesForFolder, findNote, findFolder} from '../notes-helpers';\nimport './App.css';\n\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\n\nimport NotefulContext from '../NotefulContext'\n\nimport AddFolderError from '../ErrorBoundaries/AddFolderError'\nimport AddNoteError from '../ErrorBoundaries/AddNoteError'\nimport NotePageError from '../ErrorBoundaries/NotePageError'\n\n\nclass App extends Component {\n    state = {\n        notes: [],\n        folders: [],\n        error: null,\n\n    };\n\n\n    setFolders = folders => {\n      this.setState({\n        folders\n      })\n    }\n\n    setNotes = notes => {\n      this.setState({\n        notes\n      })\n    }\n\n    deleteNote = noteId => {\n      const newNotes = this.state.notes.filter(note =>\n        note.id !== noteId\n      )\n      this.setState({\n        notes: newNotes\n      })\n    }\n\n    getFolders = () =>  {\n      fetch('http://localhost:9090/folders')\n      .then(res => {\n        if(!res.ok) {\n          throw new Error(res.status)\n        }\n        return res.json()\n      })\n      .then(this.setFolders)\n      .catch(error => this.setState({ error }))\n    }\n\n    getNotes = () => {\n      fetch('http://localhost:9090/notes')\n      .then(res => {\n        if(!res.ok) {\n          throw new Error(res.stats)\n        }\n        return res.json()\n      })\n      .then(this.setNotes)\n      .catch(error => this.setState({ error }))\n    }\n\n    componentDidMount() {\n        // fake date loading from API call\n        //setTimeout(() => this.setState(dummyStore), 600);\n        fetch('http://localhost:9090/folders')\n        .then(res => {\n          if(!res.ok) {\n            throw new Error(res.status)\n          }\n          return res.json()\n        })\n        .then(this.setFolders)\n        .catch(error => this.setState({ error }))\n\n        fetch('http://localhost:9090/notes')\n        .then(res => {\n          if(!res.ok) {\n            throw new Error(res.stats)\n          }\n          return res.json()\n        })\n        .then(this.setNotes)\n        .catch(error => this.setState({ error }))\n    }\n\n    renderNavRoutes() {\n        const {notes, folders} = this.state;\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route exact key={path} path={path} component={NoteListNav}/>\n                ))}\n                <Route path=\"/note/:noteId\" render={routeProps => {\n                    const {noteId} = routeProps.match.params;\n                    const note = findNote(notes, noteId) || {};\n                    const folder = findFolder(folders, note.folderId);\n                    return <NotePageNav {...routeProps} folder={folder} />;\n                }}/>\n\n                <Route path=\"/add-folder\" component={NotePageNav}/>\n                <Route path=\"/add-folder\" render={props =>\n                <div>\n                  <AddFolderError>\n                    <AddFolder history={props.history} getFolders={this.getFolders}/>\n                  </AddFolderError>\n                </div>} />\n                <Route path=\"/add-note\" component={NotePageNav}/>\n                <Route path=\"/add-note\" render={props => {\n                  const {noteId} = props.match.params;\n                  const note = findNote(notes, noteId)\n                  return (\n                  <div>\n                    <AddNoteError>\n                      <AddNote note={note} history={props.history} getNotes={this.getNotes} folders={this.state.folders}/>\n                    </AddNoteError>\n                  </div> )\n                }}/>\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        const {notes} = this.state;\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route exact key={path} path={path} render={routeProps => {\n                        const {folderId} = routeProps.match.params;\n                        const notesForFolder = getNotesForFolder(\n                            notes,\n                            folderId\n                        );\n                        return (\n                            <NoteListMain\n                                {...routeProps}\n                                notes={notesForFolder}\n                            />\n                        );\n                    }}/>\n                ))}\n                <Route path=\"/note/:noteId\" render={routeProps => {\n                  const {noteId} = routeProps.match.params\n                  const note = findNote(notes, noteId)\n                  console.log(`noteid in route noteid ${noteId}`)\n                  console.log(`note in route noteid ${note}`)\n                  return (\n                    <NotePageError>\n                      <NotePageMain {...routeProps} history={routeProps.history} note={note}/>\n                    </NotePageError> )\n                }}/>\n            </>\n        );\n    }\n\n    render() {\n      const contextValue = {\n        notes: this.state.notes,\n        folders: this.state.folders,\n        deleteNote: this.deleteNote,\n        setFolders: this.setFolders\n      }\n        return (\n          <NotefulContext.Provider value={contextValue}>\n            <div className=\"App\">\n                <nav className=\"App__nav\">\n                  {this.renderNavRoutes()}\n                </nav>\n                <header className=\"App__header\">\n                    <h1>\n                        <Link to=\"/\">\n                          Noteful\n                        </Link>{' '}\n                        <FontAwesomeIcon icon=\"check-double\" />\n                    </h1>\n                </header>\n                <main className=\"App__main\">\n                  {this.renderMainRoutes()}\n                </main>\n            </div>\n          </NotefulContext.Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { HashRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}